---
import { Icon } from 'astro-icon/components';
import { twMerge } from 'tailwind-merge';
import type { ItemGrid } from '~/types';
import Button from './Button.astro';

const { items = [], columns, defaultIcon = '', classes = {}, count = '' } = Astro.props as ItemGrid;

const {
  container: containerClass = '',
  // container: containerClass = "sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3",
  panel: panelClass = '',
  title: titleClass = '',
  description: descriptionClass = '',
  icon: defaultIconClass = 'text-primary',
  count: number,
} = classes;
---

{
  items && (
    <div
      class={twMerge(
        `grid gap-8 gap-x-12 sm:gap-y-8 ${
          columns === 4
            ? 'lg:grid-cols-4 md:grid-cols-3 sm:grid-cols-2'
            : columns === 3
              ? 'lg:grid-cols-3 sm:grid-cols-2'
              : columns === 2
                ? 'sm:grid-cols-2 '
                : ''
        }`,
        containerClass
      )}
    >
      {items.map(
        ({
          title,
          description,
          icon,
          callToAction,
          viewCount,
          link,
          patentId,
          patentStatus,
          inventor,
          classes: itemClasses = {},
        }) => (
          <div class={twMerge('relative flex flex-col overflow-hidden	', panelClass, itemClasses?.panel)}>
            {(icon || defaultIcon) && (
              <div class="postimg_home relative overflow-hidden	p-3 dark:bg-white">
                <img class="max-w-full object-cover object-top w-full h-52" src={icon} alt="image description" />
                <div class="absolute z-10 bottom-3 left-3 inline-flex items-center rounded-lg bg-white p-2 shadow-md">
                  <Icon
                    name="tabler:eye"
                    class="w-5 h-5 mr-1 -mr-1.5 rtl:mr-1 rtl:-mr-1.5 inline-block text-[#214EA2]"
                  />
                  <span class="ml-1 text-sm text-[#214EA2] font-bold">{viewCount} Views</span>
                </div>
              </div>
            )}
            <p class="px-3 pt-3">
              <span class="bg-blue-100 text-blue-800 text-sm font-medium me-2 px-2.5 py-0.5 rounded dark:bg-blue-900 dark:text-blue-300">
                {patentId}
              </span>
              <span class="uppercase bg-green-100 text-green-800 text-sm font-medium me-2 px-2.5 py-0.5 rounded dark:bg-green-900 dark:text-green-300">
                {patentStatus}
              </span>
            </p>
            <div class="line-clamp-7">
              <a href={link} class="hover:text-primary dark:hover:text-blue-700  transition ease-in duration-200">
                <div
                  class={twMerge('text-lg font-bold mt-2 px-3 pt-0 pb-0 !leading-snug', titleClass, itemClasses?.title)}
                >
                  {title}
                </div>
              </a>
              {description && (
                <p
                  class={twMerge('text-muted mt-2 px-3 pt-0', descriptionClass, itemClasses?.description)}
                  set:html={description}
                />
              )}
            </div>
            <p class="px-3 pt-3">
              <span class="font-medium text-base text-muted">Inventor: &nbsp;</span>
              <span class="bg-blue-100 text-blue-800 text-sm font-medium me-2 px-2.5 py-0.5 rounded dark:bg-blue-900 dark:text-blue-300">
                {inventor}
              </span>
            </p>
            <div class="!pb-5 !pt-3">
              <a href={link} class="text-[#214EA2] text-sm px-3">
                Read More
                <Icon name="tabler:arrow-narrow-right" class="w-5 h-5 ml-1 -mr-1.5 rtl:mr-1 rtl:-ml-1.5 inline-block" />
              </a>
            </div>
            {callToAction && (
              <div class="mt-2">
                <Button {...callToAction} />
              </div>
            )}
          </div>
        )
      )}
    </div>
  )
}
