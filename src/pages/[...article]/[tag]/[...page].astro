---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';
import { blogTagRobots, getStaticPathsArticleTag } from '~/utils/article';

import Layout from '~/layouts/PageLayout.astro';
import BlogList from '~/components/article/List.astro';
import Headline from '~/components/article/Headline.astro';
import Pagination from '~/components/article/Pagination.astro';

//Import the meta data json file
import TopicsMetaData from '../../../../support/topicsmetadata.json';

export const prerender = true;

export const getStaticPaths = (async ({ paginate }) => {
  return await getStaticPathsArticleTag({ paginate });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page, tag } = Astro.props as Props;

const currentPage = page.currentPage ?? 1;

// Check if the tag is a patent number using a regular expression
const patentNumberPattern = /^[A-Za-z]+\d+[A-Za-z]+\d+$/;
const isPatentNumber = patentNumberPattern.test(tag);

const titleText = isPatentNumber
  ? tag.toUpperCase()
  : tag.replaceAll('-', ' ').replace(/\s[a-z]|^[a-z]/gi, (a) => a.toUpperCase());

//Get the associated value for the tag
const topicMetadataEntry = TopicsMetaData[tag];
//Construct the meta tilte for the page
const title =
  topicMetadataEntry?.metaTitle ?? `Topic '${titleText}'${currentPage > 1 ? ` â€” Page ${currentPage} ` : ''}`;
//Construct the meta description for the page
const description = topicMetadataEntry?.metaDescription ?? '';
//Update the metadata object
const metadata = {
  title,
  description,
  robots: {
    index: blogTagRobots?.index,
    follow: blogTagRobots?.follow,
  },
  ignoreTitleTemplate: true,
};
---

<Layout metadata={metadata}>
  <section class="px-4 md:px-6 pb-12 sm:pb-16 lg:pb-20 pt-6 sm:pt-6 lg:pt-6 mx-auto max-w-4xl">
    <Headline>
      <!-- {page.data.length}
      {page.data.length > 1 ? ' Matches' : ' Match'} Across Categories for Tag - -->
      <span class={isPatentNumber ? 'uppercase' : 'capitalize'}>
        {topicMetadataEntry?.displayName ?? tag.replace(/-/g, ' ')}
      </span>
       Topic
    </Headline>
    <BlogList posts={page.data} />
    <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
  </section>
</Layout>
