---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';
import { blogTagRobots, getStaticPathsArticleTag } from '~/utils/article';

import Layout from '~/layouts/PageLayout.astro';
import BlogList from '~/components/article/List.astro';
import Headline from '~/components/article/Headline.astro';
import Pagination from '~/components/article/Pagination.astro';

export const prerender = true;

export const getStaticPaths = (async ({ paginate }) => {
  return await getStaticPathsArticleTag({ paginate });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page, tag } = Astro.props as Props;

const currentPage = page.currentPage ?? 1;

// Check if the tag is a patent number using a regular expression
const patentNumberPattern = /^[A-Za-z]+\d+[A-Za-z]+\d+$/;
const isPatentNumber = patentNumberPattern.test(tag);

const titleText = isPatentNumber
  ? tag.toUpperCase()
  : tag.replaceAll('-', ' ').replace(/\s[a-z]|^[a-z]/gi, (a) => a.toUpperCase());

const metadata = {
  title: `Posts by tag '${titleText}'${currentPage > 1 ? ` â€” Page ${currentPage} ` : ''}`,
  robots: {
    index: blogTagRobots?.index,
    follow: blogTagRobots?.follow,
  },
};
---

<Layout metadata={metadata}>
  <section class="px-4 md:px-6 py-12 sm:py-16 lg:py-20 mx-auto max-w-4xl">
    <Headline>
      {page.data.length} Matches Across Categories for Tag - <span class={isPatentNumber ? 'uppercase' : 'capitalize'}
        >{tag.replaceAll('-', ' ')}</span
      >
    </Headline>
    <BlogList posts={page.data} />
    <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
  </section>
</Layout>
